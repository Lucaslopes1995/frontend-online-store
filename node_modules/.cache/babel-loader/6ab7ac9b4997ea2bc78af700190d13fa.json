{"ast":null,"code":"var _jsxFileName = \"/home/lucas/Documentos/projetos/sd-021-b-project-frontend-online-store/src/pages/Home.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories, getProductsByNameAndCategory } from '../services/api';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n\n    this.handleButton = async () => {\n      const {\n        inputValue,\n        selectedRadio\n      } = this.state;\n\n      if (inputValue !== '' || selectedRadio !== '') {\n        const productsByNameAndCategory = await getProductsByNameAndCategory(selectedRadio, inputValue);\n        this.setState({\n          filteredProducts: productsByNameAndCategory\n        });\n      }\n    };\n\n    this.addToCart = product => {\n      const {\n        cartProducts\n      } = this.state;\n\n      if (cartProducts.find(el => el.id === product.id) === undefined) {\n        product.tamanho = 1;\n        this.setState({\n          cartProducts: [...cartProducts, product]\n        }, () => {\n          const {\n            cartProducts: Carrinho\n          } = this.state;\n          localStorage.setItem('productCart', JSON.stringify(Carrinho));\n        });\n      } else {\n        let index;\n        [...cartProducts].find((el, i) => {\n          if (el.id === product.id) {\n            index = i;\n            return true;\n          }\n        });\n        cartProducts[index].find();\n        cartProducts.tamanho += 1;\n        this.setState({\n          cartProducts\n        }, () => {\n          const {\n            cartProducts: Carrinho\n          } = this.state;\n          localStorage.setItem('productCart', JSON.stringify(Carrinho));\n        });\n      }\n    };\n\n    this.state = {\n      inputValue: '',\n      listProducts: [],\n      listCategories: [],\n      selectedRadio: '',\n      filteredProducts: [],\n      cartProducts: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeRadio = this.handleChangeRadio.bind(this);\n    this.setCategories = this.setCategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.setCategories();\n  }\n\n  handleChange(_ref) {\n    let {\n      target\n    } = _ref;\n    const {\n      name,\n      value\n    } = target;\n    this.setState(() => ({\n      [name]: value\n    }));\n  }\n\n  handleChangeRadio(el) {\n    this.setState({\n      selectedRadio: el.id\n    }, async () => {\n      this.handleButton();\n    });\n  }\n\n  async setCategories() {\n    /* console.log(await getProductsByNameAndCategory('Agro', '')); */\n    const categories = await getCategories();\n    this.setState({\n      listCategories: categories\n    });\n  }\n\n  render() {\n    const {\n      inputValue,\n      listProducts,\n      listCategories,\n      selectedRadio,\n      filteredProducts\n    } = this.state;\n    const {\n      history\n    } = this.props;\n    const validListProducts = listProducts.length === 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"inputValue\",\n      type: \"text\",\n      value: inputValue,\n      onChange: this.handleChange,\n      \"data-testid\": \"query-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"query-button\",\n      onClick: this.handleButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, \"Buscar\"), validListProducts && /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"home-initial-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"Digite algum termo de pesquisa ou escolha uma categoria.\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"shopping-cart-button\",\n      onClick: () => history.push('/cart'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, \"Carrinho\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, listCategories.map(el => /*#__PURE__*/React.createElement(\"label\", {\n      key: el.id,\n      \"data-testid\": \"category\",\n      htmlFor: el.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: el.id,\n      name: \"category\",\n      onChange: () => this.handleChangeRadio(el),\n      type: \"radio\",\n      value: el.name === selectedRadio,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }), el.name))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, filteredProducts.map(cada => /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"product\",\n      key: cada.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, cada.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, cada.price), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => history.push({\n        pathname: `/product/${cada.id}`,\n        state: cada\n      }),\n      \"data-testid\": \"product-detail-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Detalhes\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.addToCart(cada),\n      \"data-testid\": \"product-add-to-cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"Carrinho\")))));\n  }\n\n}\n\nHome.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired\n};\nexport default Home;","map":{"version":3,"sources":["/home/lucas/Documentos/projetos/sd-021-b-project-frontend-online-store/src/pages/Home.js"],"names":["React","PropTypes","getCategories","getProductsByNameAndCategory","Home","Component","constructor","handleButton","inputValue","selectedRadio","state","productsByNameAndCategory","setState","filteredProducts","addToCart","product","cartProducts","find","el","id","undefined","tamanho","Carrinho","localStorage","setItem","JSON","stringify","index","i","listProducts","listCategories","handleChange","bind","handleChangeRadio","setCategories","componentDidMount","target","name","value","categories","render","history","props","validListProducts","length","push","map","cada","title","price","pathname","propTypes","instanceOf","Object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories, getProductsByNameAndCategory } from '../services/api';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inputValue: '',\n      listProducts: [],\n      listCategories: [],\n      selectedRadio: '',\n      filteredProducts: [],\n      cartProducts: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeRadio = this.handleChangeRadio.bind(this);\n    this.setCategories = this.setCategories.bind(this);\n  }\n\n  componentDidMount() {\n    this.setCategories();\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState(() => ({ [name]: value }));\n  }\n\n  handleChangeRadio(el) {\n    this.setState({ selectedRadio: el.id }, async () => {\n      this.handleButton();\n    });\n  }\n\n  handleButton = async () => {\n    const { inputValue, selectedRadio } = this.state;\n    if (inputValue !== '' || selectedRadio !== '') {\n      const productsByNameAndCategory = await\n      getProductsByNameAndCategory(selectedRadio, inputValue);\n      this.setState({ filteredProducts: productsByNameAndCategory });\n    }\n  }\n\n  async setCategories() {\n    /* console.log(await getProductsByNameAndCategory('Agro', '')); */\n    const categories = (await getCategories());\n    this.setState({ listCategories: categories });\n  }\n\n  addToCart = (product) => {\n    const { cartProducts } = this.state;\n    if (cartProducts.find((el) => el.id === product.id) === undefined) {\n      product.tamanho = 1;\n      this.setState({ cartProducts: [...cartProducts, product] }, () => {\n        const { cartProducts: Carrinho } = this.state;\n        localStorage.setItem('productCart', JSON.stringify(Carrinho));\n      });\n    } else {\n        let index;\n        [...cartProducts].find((el,i) => {\n            if(el.id === product.id){\n                index=i;\n                return true\n            }\n            \n        })\n      cartProducts[index].find()  \n      cartProducts.tamanho += 1;\n      this.setState({ cartProducts }, () => {\n        const { cartProducts: Carrinho } = this.state;\n        localStorage.setItem('productCart', JSON.stringify(Carrinho));\n      });\n    }\n  }\n\n  render() {\n    const { inputValue, listProducts, listCategories, selectedRadio,\n      filteredProducts } = this.state;\n    const { history } = this.props;\n    const validListProducts = (listProducts.length === 0);\n    return (\n      <div>\n        <input\n          name=\"inputValue\"\n          type=\"text\"\n          value={ inputValue }\n          onChange={ this.handleChange }\n          data-testid=\"query-input\"\n        />\n        <button\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={ this.handleButton }\n        >\n          Buscar\n        </button>\n        {validListProducts && (\n          <p data-testid=\"home-initial-message\">\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </p>)}\n        <button\n          type=\"button\"\n          data-testid=\"shopping-cart-button\"\n          onClick={ () => history.push('/cart') }\n        >\n          Carrinho\n        </button>\n        <div>\n          {listCategories.map((el) => (\n            <label key={ el.id } data-testid=\"category\" htmlFor={ el.id }>\n              <input\n                id={ el.id }\n                name=\"category\"\n                onChange={ () => this.handleChangeRadio(el) }\n                type=\"radio\"\n                value={ el.name === selectedRadio }\n              />\n              {el.name}\n            </label>\n          ))}\n        </div>\n        <div>\n          {filteredProducts.map((cada) => (\n            <div\n              data-testid=\"product\"\n              key={ cada.title }\n            >\n              <p>{cada.title}</p>\n              <p>{cada.price}</p>\n              <button\n                type=\"button\"\n                onClick={ () => history.push({ pathname: `/product/${cada.id}`,\n                  state: (cada) }) }\n                data-testid=\"product-detail-link\"\n              >\n                Detalhes\n              </button>\n              <button\n                type=\"button\"\n                onClick={ () => this.addToCart(cada) }\n                data-testid=\"product-add-to-cart\"\n              >\n                Carrinho\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nHome.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}